<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ProductMapper.java 경로로 클래스명 ProductMapper까지 입력 --> 
<mapper namespace="com.example.cmtProject.mapper.mes.standardInfoMgt.ProductMapper">
	
	<!-- resultType은 application.yml의 type-aliases-package경로의 entity  -->
	<!-- 전체 조회 -->
	
	<select id="getProductTotalList" resultType="com.example.cmtProject.dto.mes.standardInfoMgt.ProductTotalDTO">
	  SELECT * 
		FROM PRODUCTS P
		LEFT JOIN MATERIAL_TYPE M
		  ON P.MTL_TYPE_CODE = M.MTL_TYPE_CODE
		LEFT JOIN WEIGHT_UNIT W
		  ON P.WT_TYPE_CODE = W.WT_TYPE_CODE
		LEFT JOIN LENGTH_UNIT L
		  ON P.LT_TYPE_CODE = L.LT_TYPE_CODE
		LEFT JOIN PRODUCT_TYPE P2
		  ON P.PDT_TYPE = P2.PDT_TYPE_CODE
	   WHERE P.PDT_USEYN = 'Y'
	   ORDER BY PDT_NO DESC
	</select>

	<!-- 선택 조회 -->
    <select id="select" resultType="com.example.cmtProject.entity.mes.standardInfoMgt.Products">
        SELECT *
        FROM PRODUCTS
        WHERE PDT_CODE = #{pdtCode}
        AND PDT_USEYN = 'Y'
    </select>
    
	<!-- 등록 -->
    <insert id="insert">
        INSERT INTO PRODUCTS(PDT_CODE, PDT_NAME, PDT_SPECIFICATION, PDT_SHIPPING_PRICE) 
        VALUES(#{pdtCode},#{pdtName},#{pdtSpecification},#{pdtShippingPrice});
    </insert>

    <!-- 수정 -->
    <update id="update">
        UPDATE PRODUCTS
           SET PDT_CODE = #{pdtCode}
              ,PDT_NAME = #{pdtName}
        WHERE PDT_CODE = #{pdtCode}
    </update>

    <!-- 삭제 -->
    <delete id="delete">
        DELETE FROM PRODUCTS
        WHERE PDT_CODE = #{pdtCode}
    </delete>
    
    <!-- 기준 정보에서 수정 -->
    <update id="pdtMainUpdate" parameterType="com.example.cmtProject.dto.mes.standardInfoMgt.ProductsEditDTO">
    UPDATE PRODUCTS 
    <set>
    	<if test="columnName == 'pdtCode'">
            PDT_CODE = #{value}
        </if>
    	<if test="columnName == 'pdtType'">
            PDT_TYPE = #{value}
        </if>
        <if test="columnName == 'pdtName'">
            PDT_NAME = #{value}
        </if>
        <if test="columnName == 'pdtShippingPrice'">
            PDT_SHIPPING_PRICE = CAST(#{value} AS NUMBER)
        </if>
        <if test="columnName == 'mtlTypeCode'">
            MTL_TYPE_CODE = #{value}
        </if>
        <if test="columnName == 'pdtWeight'">
            PDT_WEIGHT = #{value}
        </if>
        <if test="columnName == 'wtTypeCode'">
            WT_TYPE_CODE = #{value}
        </if>
        <if test="columnName == 'pdtSize'">
            PDT_SIZE = #{value}
        </if>
        <if test="columnName == 'ltTypeCode'">
            LT_TYPE_CODE = #{value}
        </if>
        <if test="columnName == 'pdtComments'">
            PDT_COMMENTS = #{value}
        </if>
        <if test="columnName == 'prcTypeCode'">
          	PRC_TYPE_CODE = #{value}
        </if>
    </set>
    WHERE PDT_NO = #{pdtNo}
	</update>
	
	<!-- 등록에서 사용할 FP의 최대값 -->
	<select id="selectMaxFP">
	   SELECT PDT_CODE
		 FROM PRODUCTS
		WHERE PDT_CODE LIKE '%FP%'
		ORDER BY PDT_CODE DESC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<!-- 등록에서 사용할 WIP의 최대값 -->
	<select id="selectMaxWIP">
	   SELECT PDT_CODE
		 FROM PRODUCTS
		WHERE PDT_CODE LIKE '%WIP%'
		ORDER BY PDT_CODE DESC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<insert id="insertPdtExcel" parameterType="com.example.cmtProject.dto.mes.standardInfoMgt.ProductsDTO">
		MERGE INTO PRODUCTS tgt
		USING (
	    SELECT  #{pdtNo} AS PDT_NO,
	            #{pdtCode} AS PDT_CODE,
	            #{pdtName} AS PDT_NAME,
	            #{pdtShippingPrice} AS PDT_SHIPPING_PRICE,
	            #{pdtComments} AS PDT_COMMENTS,
	            #{pdtUseyn} AS PDT_USEYN,
	            #{mtlTypeCode} AS MTL_TYPE_CODE,
	            #{pdtWeight} AS PDT_WEIGHT,
	            #{wtTypeCode} AS WT_TYPE_CODE,
	            #{pdtSize} AS PDT_SIZE,
	            #{ltTypeCode} AS LT_TYPE_CODE,
	            #{pdtType} AS PDT_TYPE,
	            #{prcTypeCode} AS PRC_TYPE_CODE
	    FROM dual
		) src
		ON (tgt.PDT_NO = src.PDT_NO)
		WHEN MATCHED THEN
		    UPDATE SET 
		        tgt.PDT_CODE = src.PDT_CODE,
		        tgt.PDT_NAME = src.PDT_NAME,
		        tgt.PDT_SHIPPING_PRICE = src.PDT_SHIPPING_PRICE,
		        tgt.PDT_COMMENTS = src.PDT_COMMENTS,
		        tgt.PDT_USEYN = src.PDT_USEYN,
		        tgt.MTL_TYPE_CODE = src.MTL_TYPE_CODE,
		        tgt.PDT_WEIGHT = src.PDT_WEIGHT,
		        tgt.WT_TYPE_CODE = src.WT_TYPE_CODE,
		        tgt.PDT_SIZE = src.PDT_SIZE,
		        tgt.LT_TYPE_CODE = src.LT_TYPE_CODE,
		        tgt.PDT_TYPE = src.PDT_TYPE,
		        tgt.PRC_TYPE_CODE = src.PRC_TYPE_CODE
		WHEN NOT MATCHED THEN
		    INSERT (
		        PDT_NO, 
		        PDT_CODE, 
		        PDT_NAME, 
		        PDT_SHIPPING_PRICE, 
		        PDT_COMMENTS, 
		        PDT_USEYN, 
		        MTL_TYPE_CODE,
		        PDT_WEIGHT,
		        WT_TYPE_CODE,
		        PDT_SIZE,
		        LT_TYPE_CODE,
		        PDT_TYPE,
		        PRC_TYPE_CODE
		    )
		    VALUES (
		        src.PDT_NO,
		        src.PDT_CODE,
		        src.PDT_NAME,
		        src.PDT_SHIPPING_PRICE,
		        src.PDT_COMMENTS,
		        src.PDT_USEYN,
		        src.MTL_TYPE_CODE,
		        src.PDT_WEIGHT,
		        src.WT_TYPE_CODE,
		        src.PDT_SIZE,
		        src.LT_TYPE_CODE,
		        src.PDT_TYPE,
		        src.PRC_TYPE_CODE
		    )
	</insert>
	
	<!-- BOM 모달 등록에서 상위코드 목록 -->
	<select id="selectChildItemCodePdt">
		SELECT PDT_CODE FROM PRODUCTS
	</select>
	
	<!-- BOM 모달 등록에서 하위코드 목록 -->
	<select id="selectParentItemCodePdt">
		SELECT PDT_CODE FROM PRODUCTS
		UNION
		SELECT MTL_CODE FROM MATERIALS
	</select>
	
	<!-- 삭제 전 BOM의 childCode 체크 -->
	<select id="selectCheckBomChildCode">
		SELECT CHILD_ITEM_CODE
		  FROM BOM
		 WHERE PARENT_PDT_CODE = #{pdtCode}
		   AND USE_YN = 'Y'
	</select>
	
	<!-- 삭제 -->
	<update id="deletePdtCode">
	 UPDATE PRODUCTS 
		SET PDT_USEYN = 'N' 
	  WHERE PDT_CODE = #{pdtCode}
	</update>
	
</mapper>